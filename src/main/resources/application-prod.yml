spring:
  application:
    name: myProject-production
  
  # 数据库配置
  datasource:
    url: ${DATABASE_URL:jdbc:mysql://localhost:3306/chongwufuwu?serverTimezone=GMT%2B8&useSSL=true}
    username: ${DATABASE_USERNAME:root}
    password: ${DATABASE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  # Redis配置
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: 0
    timeout: 5000ms
    ssl: ${REDIS_SSL:false}
    jedis:
      pool:
        max-active: 50
        max-wait: -1ms
        max-idle: 20
        min-idle: 5
  
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  
  # 允许循环依赖
  main:
    allow-circular-references: true

# 服务器配置
server:
  port: ${SERVER_PORT:7002}
  tomcat:
    threads:
      max: 400
      min-spare: 20
    accept-count: 200
    max-connections: 10000
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  # SSL配置（如果需要）
  ssl:
    enabled: ${SSL_ENABLED:false}
    key-store: ${SSL_KEY_STORE:}
    key-store-password: ${SSL_KEY_STORE_PASSWORD:}
    key-store-type: ${SSL_KEY_STORE_TYPE:PKCS12}

# MyBatis配置
mybatis:
  mapper-locations: classpath:/mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl
    map-underscore-to-camel-case: true
    cache-enabled: true
    lazy-loading-enabled: true
    aggressive-lazy-loading: false

# OSS配置
oss:
  endpoint: ${OSS_ENDPOINT}
  accessKeyId: ${OSS_ACCESS_KEY_ID}
  accessKeySecret: ${OSS_ACCESS_KEY_SECRET}
  bucketName: ${OSS_BUCKET_NAME}
  urlPrefix: ${OSS_URL_PREFIX}

# 日志配置
logging:
  level:
    com.javaPro.myProject: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate: WARN
    com.zaxxer.hikari: WARN
    org.springframework.transaction: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:/var/log/myproject/application.log}
    max-size: 100MB
    max-history: 30
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30
      total-size-cap: 3GB

# Actuator配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: never
  health:
    redis:
      enabled: true
    db:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# 安全配置
security:
  require-ssl: ${REQUIRE_SSL:false}
  
# 缓存配置
cache:
  type: redis
  redis:
    time-to-live: 3600000
