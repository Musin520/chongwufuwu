spring:
  application:
    name: myProject-docker
  
  # 数据库配置
  datasource:
    url: jdbc:mysql://mysql:3306/chongwufuwu?serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:root123}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # Redis配置
  redis:
    host: ${SPRING_REDIS_HOST:redis}
    port: 6379
    password: ${SPRING_REDIS_PASSWORD:}
    database: 0
    timeout: 5000ms
    jedis:
      pool:
        max-active: 20
        max-wait: -1ms
        max-idle: 10
        min-idle: 0
  
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MySQL8Dialect
  
  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  
  # 允许循环依赖
  main:
    allow-circular-references: true

# 服务器配置
server:
  port: 7002
  tomcat:
    threads:
      max: 200
      min-spare: 10
    accept-count: 100
    max-connections: 8192
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# MyBatis配置
mybatis:
  mapper-locations: classpath:/mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl
    map-underscore-to-camel-case: true

# OSS配置
oss:
  endpoint: ${OSS_ENDPOINT:http://minio:9000}
  accessKeyId: ${OSS_ACCESS_KEY_ID:minioadmin}
  accessKeySecret: ${OSS_ACCESS_KEY_SECRET:minioadmin123}
  bucketName: ${OSS_BUCKET_NAME:myjavaproject}
  urlPrefix: ${OSS_URL_PREFIX:http://localhost:9000/myjavaproject/}

# 日志配置
logging:
  level:
    com.javaPro.myProject: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate: WARN
    com.zaxxer.hikari: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /app/logs/application.log
    max-size: 100MB
    max-history: 30

# Actuator配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  health:
    redis:
      enabled: true
    db:
      enabled: true
